{"version":3,"sources":["useWindowDimensions.ts","App.tsx","index.tsx"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","App","wrapperRef","useRef","rawRef","htmlRef","mdRef","Remarkable","highlight","str","lang","hljs","getLanguage","value","err","highlightAuto","windowHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","modifyCode","useCallback","e","current","innerHTML","render","target","querySelectorAll","forEach","block","highlightBlock","focus","style","ref","className","onChange","ReactDOM","StrictMode","document","getElementById"],"mappings":"iPAEA,SAASA,IACP,MAAmDC,OACnD,MAAO,CAAEC,MADT,EAAQC,WACQC,OADhB,EAA2BC,a,WC4DdC,MAxDf,WACE,IAAMC,EAAaC,iBAAuB,MACpCC,EAASD,iBAA4B,MACrCE,EAAUF,iBAAuB,MAEjCG,EAAQH,iBAEZ,IAAII,IAAW,CACbC,UAAW,SAACC,EAAKC,GACf,GAAIA,GAAQC,IAAKC,YAAYF,GAC3B,IACE,OAAOC,IAAKH,UAAUE,EAAMD,GAAKI,MACjC,MAAOC,IAGX,IACE,OAAOH,IAAKI,cAAcN,GAAKI,MAC/B,MAAOC,IAET,MAAO,OAKGE,EDxBH,WACb,MAAgDC,mBAAStB,GAAzD,mBAAOuB,EAAP,KAAyBC,EAAzB,KASA,OAPAC,qBAAU,WACR,IAAMC,EAAe,kBAAMF,EAAoBxB,IAG/C,OADAC,OAAO0B,iBAAiB,SAAUD,GAC3B,kBAAMzB,OAAO2B,oBAAoB,SAAUF,MACjD,IAEIH,ECc0BM,GAAzBzB,OAEF0B,EAAaC,uBACjB,SAACC,GACKtB,EAAQuB,UACVvB,EAAQuB,QAAQC,UAAYvB,EAAMsB,QAAQE,OAAOH,EAAEI,OAAOlB,OAE1DR,EAAQuB,QACLI,iBAAiB,YACjBC,SAAQ,SAAAC,GAAK,OAAIvB,IAAKwB,eAAeD,SAG5C,IAYF,OATAd,qBAAU,WACJhB,EAAOwB,SAASxB,EAAOwB,QAAQQ,UAClC,IAEHhB,qBAAU,WACJlB,EAAW0B,UACb1B,EAAW0B,QAAQS,MAAMtC,OAAzB,UAAqCiB,EAArC,SACD,CAACA,IAGF,sBAAKsB,IAAKpC,EAAYqC,UAAU,UAAhC,UACE,0BAAUD,IAAKlC,EAAQoC,SAAUf,EAAYc,UAAU,QACvD,qBAAKD,IAAKjC,EAASkC,UAAU,iB,OCrDnCE,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.da44dae9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return { width, height };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions);\n\n  useEffect(() => {\n    const handleResize = () => setWindowDimensions(getWindowDimensions);\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import hljs from 'highlight.js';\nimport 'highlight.js/styles/stackoverflow-dark.css';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { Remarkable } from 'remarkable';\nimport './App.css';\nimport useWindowDimensions from './useWindowDimensions';\n\nfunction App() {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const rawRef = useRef<HTMLTextAreaElement>(null);\n  const htmlRef = useRef<HTMLDivElement>(null);\n\n  const mdRef = useRef(\n    // https://github.com/jonschlinkert/remarkable#syntax-highlighting\n    new Remarkable({\n      highlight: (str, lang) => {\n        if (lang && hljs.getLanguage(lang)) {\n          try {\n            return hljs.highlight(lang, str).value;\n          } catch (err) {}\n        }\n\n        try {\n          return hljs.highlightAuto(str).value;\n        } catch (err) {}\n\n        return ''; // use external default escaping\n      }\n    })\n  );\n\n  const { height: windowHeight } = useWindowDimensions();\n\n  const modifyCode = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      if (htmlRef.current) {\n        htmlRef.current.innerHTML = mdRef.current.render(e.target.value);\n\n        htmlRef.current\n          .querySelectorAll('pre code')\n          .forEach(block => hljs.highlightBlock(block as HTMLElement));\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (rawRef.current) rawRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (wrapperRef.current)\n      wrapperRef.current.style.height = `${windowHeight}px`;\n  }, [windowHeight]);\n\n  return (\n    <div ref={wrapperRef} className='wrapper'>\n      <textarea ref={rawRef} onChange={modifyCode} className='raw'></textarea>\n      <div ref={htmlRef} className='rendered'></div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}